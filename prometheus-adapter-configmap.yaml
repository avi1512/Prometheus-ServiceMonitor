apiVersion: v1
data:
  config.yaml: "rules:\n- seriesQuery: '{__name__=~\"^namespace_app.*\",namespace!=\"\",apps_deployment!=\"\"}'\n
    \ seriesFilters: []\n  resources:\n    template: \"<<.Group>>_<<.Resource>>\"\n
    \   overrides:\n      namespace:\n        resource: namespace\n  metricsQuery:
    sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)\n- seriesQuery: 'http_requests_total{namespace!=\"\",pod!=\"\"}'\n
    \ seriesFilters: []\n  resources:\n    overrides:\n      namespace:\n        resource:
    namespace\n      pod: \n        resource: pod\n  name:\n    matches: \"^(.*)_total\"\n
    \   as: \"${1}_per_second\"\n  metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m]))
    by (<<.GroupBy>>)'\n- seriesQuery: '{__name__=~\"^container_.*\",container!=\"POD\",namespace!=\"\",pod!=\"\"}'\n
    \ seriesFilters: []\n  resources:\n    overrides:\n      namespace:\n        resource:
    namespace\n      pod:\n        resource: pod\n  name:\n    matches: ^container_(.*)_seconds_total$\n
    \   as: \"\"\n  metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container!=\"POD\"}[5m]))\n
    \   by (<<.GroupBy>>)\n- seriesQuery: '{__name__=~\"^container_.*\",container!=\"POD\",namespace!=\"\",pod!=\"\"}'\n
    \ seriesFilters:\n  - isNot: ^container_.*_seconds_total$\n  resources:\n    overrides:\n
    \     namespace:\n        resource: namespace\n      pod:\n        resource: pod\n
    \ name:\n    matches: ^container_(.*)_total$\n    as: \"\"\n  metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container!=\"POD\"}[5m]))\n
    \   by (<<.GroupBy>>)\n- seriesQuery: '{__name__=~\"^container_.*\",container!=\"POD\",namespace!=\"\",pod!=\"\"}'\n
    \ seriesFilters:\n  - isNot: ^container_.*_total$\n  resources:\n    overrides:\n
    \     namespace:\n        resource: namespace\n      pod:\n        resource: pod\n
    \ name:\n    matches: ^container_(.*)$\n    as: \"\"\n  metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container!=\"POD\"})
    by (<<.GroupBy>>)\n- seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n
    \ seriesFilters:\n  - isNot: .*_total$\n  resources:\n    template: <<.Resource>>\n
    \ name:\n    matches: \"\"\n    as: \"\"\n  metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>})
    by (<<.GroupBy>>)\n- seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n
    \ seriesFilters:\n  - isNot: .*_seconds_total\n  resources:\n    template: <<.Resource>>\n
    \ name:\n    matches: ^(.*)_total$\n    as: \"\"\n  metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m]))
    by (<<.GroupBy>>)\n- seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n
    \ seriesFilters: []\n  resources:\n    template: <<.Resource>>\n  name:\n    matches:
    ^(.*)_seconds_total$\n    as: \"\"\n  metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m]))
    by (<<.GroupBy>>)\nresourceRules:\n  cpu:\n    containerLabel: container\n    containerQuery:
    |\n      sum by (<<.GroupBy>>) (\n        rate(container_cpu_usage_seconds_total{container!=\"\",<<.LabelMatchers>>}[3m])\n
    \     )\n    nodeQuery: |\n      sum  by (<<.GroupBy>>) (\n        rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\",<<.LabelMatchers>>}[3m])\n
    \     )\n    resources:\n      overrides:\n        namespace:\n          resource:
    namespace\n        node:\n          resource: node\n        pod:\n          resource:
    pod\n  memory:\n    containerLabel: container\n    containerQuery: |\n      sum
    by (<<.GroupBy>>) (\n        avg_over_time(container_memory_working_set_bytes{container!=\"\",<<.LabelMatchers>>}[3m])\n
    \     )\n    nodeQuery: |\n      sum by (<<.GroupBy>>) (\n        avg_over_time(node_memory_MemTotal_bytes{<<.LabelMatchers>>}[3m])\n
    \       -\n        avg_over_time(node_memory_MemAvailable_bytes{<<.LabelMatchers>>}[3m])\n
    \     )\n    resources:\n      overrides:\n        namespace:\n          resource:
    namespace\n        node:\n          resource: node\n        pod:\n          resource:
    pod\n  window: 3m\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: prometheus-adapter
    meta.helm.sh/release-namespace: demo
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/instance: prometheus-adapter
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus-adapter
    app.kubernetes.io/part-of: prometheus-adapter
    app.kubernetes.io/version: v0.10.0
    helm.sh/chart: prometheus-adapter-4.1.1
  name: prometheus-adapter
  namespace: demo
